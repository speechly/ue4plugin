// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speechly.proto

#include "IncludeBegin.h"

#include "speechly.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_speechly_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EntityEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IntentEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SLUConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SLUError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SLUEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SLUStarted;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SegmentEndEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TranscriptEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SLUFinished;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TentativeEntitiesEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TentativeTranscriptEvent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_speechly_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_SLUResponse;
}  // namespace protobuf_speechly_2eproto
namespace v1 {
class SLURequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLURequest>
      _instance;
  const ::v1::SLUConfig* config_;
  const ::v1::SLUEvent* event_;
  ::google::protobuf::internal::ArenaStringPtr audio_;
} _SLURequest_default_instance_;
class SLUConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLUConfig>
      _instance;
} _SLUConfig_default_instance_;
class SLUEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLUEvent>
      _instance;
} _SLUEvent_default_instance_;
class SLUResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLUResponse>
      _instance;
  const ::v1::TranscriptEvent* transcript_;
  const ::v1::EntityEvent* entity_;
  const ::v1::IntentEvent* intent_;
  const ::v1::SegmentEndEvent* segment_end_;
  const ::v1::TentativeTranscriptEvent* tentative_transcript_;
  const ::v1::TentativeEntitiesEvent* tentative_entities_;
  const ::v1::IntentEvent* tentative_intent_;
  const ::v1::SLUStarted* started_;
  const ::v1::SLUFinished* finished_;
} _SLUResponse_default_instance_;
class TentativeTranscriptEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TentativeTranscriptEvent>
      _instance;
} _TentativeTranscriptEvent_default_instance_;
class TranscriptEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TranscriptEvent>
      _instance;
} _TranscriptEvent_default_instance_;
class TentativeEntitiesEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TentativeEntitiesEvent>
      _instance;
} _TentativeEntitiesEvent_default_instance_;
class EntityEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityEvent>
      _instance;
} _EntityEvent_default_instance_;
class IntentEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntentEvent>
      _instance;
} _IntentEvent_default_instance_;
class SegmentEndEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SegmentEndEvent>
      _instance;
} _SegmentEndEvent_default_instance_;
class SLUStartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLUStarted>
      _instance;
} _SLUStarted_default_instance_;
class SLUFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLUFinished>
      _instance;
} _SLUFinished_default_instance_;
class SLUErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLUError>
      _instance;
} _SLUError_default_instance_;
class WLURequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WLURequest>
      _instance;
} _WLURequest_default_instance_;
class WLUResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WLUResponse>
      _instance;
} _WLUResponse_default_instance_;
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest>
      _instance;
} _LoginRequest_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse>
      _instance;
} _LoginResponse_default_instance_;
}  // namespace v1
namespace protobuf_speechly_2eproto {
static void InitDefaultsSLURequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SLURequest_default_instance_;
    new (ptr) ::v1::SLURequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SLURequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SLURequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSLURequest}, {
      &protobuf_speechly_2eproto::scc_info_SLUConfig.base,
      &protobuf_speechly_2eproto::scc_info_SLUEvent.base,}};

static void InitDefaultsSLUConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SLUConfig_default_instance_;
    new (ptr) ::v1::SLUConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SLUConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SLUConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSLUConfig}, {}};

static void InitDefaultsSLUEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SLUEvent_default_instance_;
    new (ptr) ::v1::SLUEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SLUEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SLUEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSLUEvent}, {}};

static void InitDefaultsSLUResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SLUResponse_default_instance_;
    new (ptr) ::v1::SLUResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SLUResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_SLUResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsSLUResponse}, {
      &protobuf_speechly_2eproto::scc_info_TranscriptEvent.base,
      &protobuf_speechly_2eproto::scc_info_EntityEvent.base,
      &protobuf_speechly_2eproto::scc_info_IntentEvent.base,
      &protobuf_speechly_2eproto::scc_info_SegmentEndEvent.base,
      &protobuf_speechly_2eproto::scc_info_TentativeTranscriptEvent.base,
      &protobuf_speechly_2eproto::scc_info_TentativeEntitiesEvent.base,
      &protobuf_speechly_2eproto::scc_info_SLUStarted.base,
      &protobuf_speechly_2eproto::scc_info_SLUFinished.base,}};

static void InitDefaultsTentativeTranscriptEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_TentativeTranscriptEvent_default_instance_;
    new (ptr) ::v1::TentativeTranscriptEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::TentativeTranscriptEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TentativeTranscriptEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTentativeTranscriptEvent}, {
      &protobuf_speechly_2eproto::scc_info_TranscriptEvent.base,}};

static void InitDefaultsTranscriptEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_TranscriptEvent_default_instance_;
    new (ptr) ::v1::TranscriptEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::TranscriptEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TranscriptEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTranscriptEvent}, {}};

static void InitDefaultsTentativeEntitiesEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_TentativeEntitiesEvent_default_instance_;
    new (ptr) ::v1::TentativeEntitiesEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::TentativeEntitiesEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TentativeEntitiesEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTentativeEntitiesEvent}, {
      &protobuf_speechly_2eproto::scc_info_EntityEvent.base,}};

static void InitDefaultsEntityEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_EntityEvent_default_instance_;
    new (ptr) ::v1::EntityEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::EntityEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EntityEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEntityEvent}, {}};

static void InitDefaultsIntentEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_IntentEvent_default_instance_;
    new (ptr) ::v1::IntentEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::IntentEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntentEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntentEvent}, {}};

static void InitDefaultsSegmentEndEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SegmentEndEvent_default_instance_;
    new (ptr) ::v1::SegmentEndEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SegmentEndEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SegmentEndEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSegmentEndEvent}, {}};

static void InitDefaultsSLUStarted() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SLUStarted_default_instance_;
    new (ptr) ::v1::SLUStarted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SLUStarted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SLUStarted =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSLUStarted}, {}};

static void InitDefaultsSLUFinished() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SLUFinished_default_instance_;
    new (ptr) ::v1::SLUFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SLUFinished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SLUFinished =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSLUFinished}, {
      &protobuf_speechly_2eproto::scc_info_SLUError.base,}};

static void InitDefaultsSLUError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_SLUError_default_instance_;
    new (ptr) ::v1::SLUError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::SLUError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SLUError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSLUError}, {}};

static void InitDefaultsWLURequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_WLURequest_default_instance_;
    new (ptr) ::v1::WLURequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::WLURequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WLURequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWLURequest}, {}};

static void InitDefaultsWLUResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_WLUResponse_default_instance_;
    new (ptr) ::v1::WLUResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::WLUResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WLUResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWLUResponse}, {
      &protobuf_speechly_2eproto::scc_info_SLUResponse.base,}};

static void InitDefaultsLoginRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_LoginRequest_default_instance_;
    new (ptr) ::v1::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::LoginRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginRequest}, {}};

static void InitDefaultsLoginResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::v1::_LoginResponse_default_instance_;
    new (ptr) ::v1::LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::v1::LoginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SLURequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SLUConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SLUEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SLUResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TentativeTranscriptEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TranscriptEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TentativeEntitiesEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EntityEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntentEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SegmentEndEvent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SLUStarted.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SLUFinished.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SLUError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WLURequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WLUResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginResponse.base);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLURequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLURequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::v1::SLURequestDefaultTypeInternal, config_),
  offsetof(::v1::SLURequestDefaultTypeInternal, event_),
  offsetof(::v1::SLURequestDefaultTypeInternal, audio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLURequest, streaming_request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUConfig, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUConfig, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUConfig, sample_rate_hertz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUConfig, language_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUEvent, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::v1::SLUResponseDefaultTypeInternal, transcript_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, entity_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, intent_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, segment_end_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, tentative_transcript_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, tentative_entities_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, tentative_intent_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, started_),
  offsetof(::v1::SLUResponseDefaultTypeInternal, finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUResponse, streaming_response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TentativeTranscriptEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TentativeTranscriptEvent, tentative_transcript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TentativeTranscriptEvent, tentative_words_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TranscriptEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TranscriptEvent, audio_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TranscriptEvent, segment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TranscriptEvent, word_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TranscriptEvent, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TranscriptEvent, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TranscriptEvent, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TentativeEntitiesEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::TentativeEntitiesEvent, tentative_entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::EntityEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::EntityEvent, audio_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::EntityEvent, segment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::EntityEvent, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::EntityEvent, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::EntityEvent, start_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::EntityEvent, end_position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::IntentEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::IntentEvent, audio_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::IntentEvent, segment_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::IntentEvent, intent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SegmentEndEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SegmentEndEvent, audio_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SegmentEndEvent, segment_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUStarted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUStarted, audio_context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUFinished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUFinished, audio_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUFinished, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUError, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::SLUError, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::WLURequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::WLURequest, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::WLURequest, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::WLUResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::WLUResponse, responses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::LoginRequest, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::LoginRequest, app_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::v1::LoginResponse, token_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::v1::SLURequest)},
  { 9, -1, sizeof(::v1::SLUConfig)},
  { 18, -1, sizeof(::v1::SLUEvent)},
  { 24, -1, sizeof(::v1::SLUResponse)},
  { 39, -1, sizeof(::v1::TentativeTranscriptEvent)},
  { 46, -1, sizeof(::v1::TranscriptEvent)},
  { 57, -1, sizeof(::v1::TentativeEntitiesEvent)},
  { 63, -1, sizeof(::v1::EntityEvent)},
  { 74, -1, sizeof(::v1::IntentEvent)},
  { 82, -1, sizeof(::v1::SegmentEndEvent)},
  { 89, -1, sizeof(::v1::SLUStarted)},
  { 95, -1, sizeof(::v1::SLUFinished)},
  { 102, -1, sizeof(::v1::SLUError)},
  { 109, -1, sizeof(::v1::WLURequest)},
  { 116, -1, sizeof(::v1::WLUResponse)},
  { 122, -1, sizeof(::v1::LoginRequest)},
  { 129, -1, sizeof(::v1::LoginResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SLURequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SLUConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SLUEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SLUResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_TentativeTranscriptEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_TranscriptEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_TentativeEntitiesEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_EntityEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_IntentEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SegmentEndEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SLUStarted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SLUFinished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_SLUError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_WLURequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_WLUResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::v1::_LoginResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "speechly.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016speechly.proto\022\002v1\"r\n\nSLURequest\022\037\n\006co"
      "nfig\030\001 \001(\0132\r.v1.SLUConfigH\000\022\035\n\005event\030\002 \001"
      "(\0132\014.v1.SLUEventH\000\022\017\n\005audio\030\003 \001(\014H\000B\023\n\021s"
      "treaming_request\"\223\001\n\tSLUConfig\022(\n\010encodi"
      "ng\030\001 \001(\0162\026.v1.SLUConfig.Encoding\022\020\n\010chan"
      "nels\030\002 \001(\005\022\031\n\021sample_rate_hertz\030\003 \001(\005\022\025\n"
      "\rlanguage_code\030\004 \001(\t\"\030\n\010Encoding\022\014\n\010LINE"
      "AR16\020\000\"K\n\010SLUEvent\022!\n\005event\030\001 \001(\0162\022.v1.S"
      "LUEvent.Event\"\034\n\005Event\022\t\n\005START\020\000\022\010\n\004STO"
      "P\020\001\"\255\003\n\013SLUResponse\022)\n\ntranscript\030\001 \001(\0132"
      "\023.v1.TranscriptEventH\000\022!\n\006entity\030\002 \001(\0132\017"
      ".v1.EntityEventH\000\022!\n\006intent\030\003 \001(\0132\017.v1.I"
      "ntentEventH\000\022*\n\013segment_end\030\004 \001(\0132\023.v1.S"
      "egmentEndEventH\000\022<\n\024tentative_transcript"
      "\030\005 \001(\0132\034.v1.TentativeTranscriptEventH\000\0228"
      "\n\022tentative_entities\030\006 \001(\0132\032.v1.Tentativ"
      "eEntitiesEventH\000\022+\n\020tentative_intent\030\007 \001"
      "(\0132\017.v1.IntentEventH\000\022!\n\007started\030\010 \001(\0132\016"
      ".v1.SLUStartedH\000\022#\n\010finished\030\t \001(\0132\017.v1."
      "SLUFinishedH\000B\024\n\022streaming_response\"f\n\030T"
      "entativeTranscriptEvent\022\034\n\024tentative_tra"
      "nscript\030\001 \001(\t\022,\n\017tentative_words\030\002 \003(\0132\023"
      ".v1.TranscriptEvent\"\177\n\017TranscriptEvent\022\025"
      "\n\raudio_context\030\001 \001(\t\022\022\n\nsegment_id\030\002 \001("
      "\005\022\014\n\004word\030\003 \001(\t\022\r\n\005index\030\004 \001(\005\022\022\n\nstart_"
      "time\030\005 \001(\005\022\020\n\010end_time\030\006 \001(\005\"E\n\026Tentativ"
      "eEntitiesEvent\022+\n\022tentative_entities\030\001 \003"
      "(\0132\017.v1.EntityEvent\"\205\001\n\013EntityEvent\022\025\n\ra"
      "udio_context\030\001 \001(\t\022\022\n\nsegment_id\030\002 \001(\005\022\016"
      "\n\006entity\030\003 \001(\t\022\r\n\005value\030\004 \001(\t\022\026\n\016start_p"
      "osition\030\005 \001(\005\022\024\n\014end_position\030\006 \001(\005\"H\n\013I"
      "ntentEvent\022\025\n\raudio_context\030\001 \001(\t\022\022\n\nseg"
      "ment_id\030\002 \001(\005\022\016\n\006intent\030\003 \001(\t\"<\n\017Segment"
      "EndEvent\022\025\n\raudio_context\030\001 \001(\t\022\022\n\nsegme"
      "nt_id\030\002 \001(\005\"#\n\nSLUStarted\022\025\n\raudio_conte"
      "xt\030\001 \001(\t\"A\n\013SLUFinished\022\025\n\raudio_context"
      "\030\001 \001(\t\022\033\n\005error\030\002 \001(\0132\014.v1.SLUError\")\n\010S"
      "LUError\022\014\n\004code\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\"1"
      "\n\nWLURequest\022\025\n\rlanguage_code\030\001 \001(\t\022\014\n\004t"
      "ext\030\002 \001(\t\"1\n\013WLUResponse\022\"\n\tresponses\030\001 "
      "\003(\0132\017.v1.SLUResponse\"1\n\014LoginRequest\022\021\n\t"
      "device_id\030\001 \001(\t\022\016\n\006app_id\030\002 \001(\t\"\036\n\rLogin"
      "Response\022\r\n\005token\030\001 \001(\t26\n\003SLU\022/\n\006Stream"
      "\022\016.v1.SLURequest\032\017.v1.SLUResponse\"\000(\0010\0012"
      "0\n\003WLU\022)\n\004Text\022\016.v1.WLURequest\032\017.v1.WLUR"
      "esponse\"\0002:\n\010Identity\022.\n\005Login\022\020.v1.Logi"
      "nRequest\032\021.v1.LoginResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1877);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "speechly.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_speechly_2eproto
namespace v1 {
const ::google::protobuf::EnumDescriptor* SLUConfig_Encoding_descriptor() {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_speechly_2eproto::file_level_enum_descriptors[0];
}
bool SLUConfig_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SLUConfig_Encoding SLUConfig::LINEAR16;
const SLUConfig_Encoding SLUConfig::Encoding_MIN;
const SLUConfig_Encoding SLUConfig::Encoding_MAX;
const int SLUConfig::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SLUEvent_Event_descriptor() {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_speechly_2eproto::file_level_enum_descriptors[1];
}
bool SLUEvent_Event_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SLUEvent_Event SLUEvent::START;
const SLUEvent_Event SLUEvent::STOP;
const SLUEvent_Event SLUEvent::Event_MIN;
const SLUEvent_Event SLUEvent::Event_MAX;
const int SLUEvent::Event_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SLURequest::InitAsDefaultInstance() {
  ::v1::_SLURequest_default_instance_.config_ = const_cast< ::v1::SLUConfig*>(
      ::v1::SLUConfig::internal_default_instance());
  ::v1::_SLURequest_default_instance_.event_ = const_cast< ::v1::SLUEvent*>(
      ::v1::SLUEvent::internal_default_instance());
  ::v1::_SLURequest_default_instance_.audio_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLURequest::set_allocated_config(::v1::SLUConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_request();
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
    streaming_request_.config_ = config;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLURequest.config)
}
void SLURequest::set_allocated_event(::v1::SLUEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_request();
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
    streaming_request_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLURequest.event)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLURequest::kConfigFieldNumber;
const int SLURequest::kEventFieldNumber;
const int SLURequest::kAudioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLURequest::SLURequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SLURequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SLURequest)
}
SLURequest::SLURequest(const SLURequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_streaming_request();
  switch (from.streaming_request_case()) {
    case kConfig: {
      mutable_config()->::v1::SLUConfig::MergeFrom(from.config());
      break;
    }
    case kEvent: {
      mutable_event()->::v1::SLUEvent::MergeFrom(from.event());
      break;
    }
    case kAudio: {
      set_audio(from.audio());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:v1.SLURequest)
}

void SLURequest::SharedCtor() {
  clear_has_streaming_request();
}

SLURequest::~SLURequest() {
  // @@protoc_insertion_point(destructor:v1.SLURequest)
  SharedDtor();
}

void SLURequest::SharedDtor() {
  if (has_streaming_request()) {
    clear_streaming_request();
  }
}

void SLURequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLURequest::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLURequest& SLURequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SLURequest.base);
  return *internal_default_instance();
}


void SLURequest::clear_streaming_request() {
// @@protoc_insertion_point(one_of_clear_start:v1.SLURequest)
  switch (streaming_request_case()) {
    case kConfig: {
      delete streaming_request_.config_;
      break;
    }
    case kEvent: {
      delete streaming_request_.event_;
      break;
    }
    case kAudio: {
      streaming_request_.audio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STREAMING_REQUEST_NOT_SET;
}


void SLURequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SLURequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_streaming_request();
  _internal_metadata_.Clear();
}

bool SLURequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SLURequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .v1.SLUConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.SLUEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes audio = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SLURequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SLURequest)
  return false;
#undef DO_
}

void SLURequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SLURequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.SLUConfig config = 1;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_config(), output);
  }

  // .v1.SLUEvent event = 2;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_event(), output);
  }

  // bytes audio = 3;
  if (has_audio()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->audio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SLURequest)
}

::google::protobuf::uint8* SLURequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SLURequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.SLUConfig config = 1;
  if (has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_config(), deterministic, target);
  }

  // .v1.SLUEvent event = 2;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_event(), deterministic, target);
  }

  // bytes audio = 3;
  if (has_audio()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->audio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SLURequest)
  return target;
}

size_t SLURequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SLURequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (streaming_request_case()) {
    // .v1.SLUConfig config = 1;
    case kConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_request_.config_);
      break;
    }
    // .v1.SLUEvent event = 2;
    case kEvent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_request_.event_);
      break;
    }
    // bytes audio = 3;
    case kAudio: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->audio());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLURequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SLURequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SLURequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLURequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SLURequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SLURequest)
    MergeFrom(*source);
  }
}

void SLURequest::MergeFrom(const SLURequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SLURequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.streaming_request_case()) {
    case kConfig: {
      mutable_config()->::v1::SLUConfig::MergeFrom(from.config());
      break;
    }
    case kEvent: {
      mutable_event()->::v1::SLUEvent::MergeFrom(from.event());
      break;
    }
    case kAudio: {
      set_audio(from.audio());
      break;
    }
    case STREAMING_REQUEST_NOT_SET: {
      break;
    }
  }
}

void SLURequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SLURequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLURequest::CopyFrom(const SLURequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SLURequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLURequest::IsInitialized() const {
  return true;
}

void SLURequest::Swap(SLURequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLURequest::InternalSwap(SLURequest* other) {
  using std::swap;
  swap(streaming_request_, other->streaming_request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLURequest::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLUConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLUConfig::kEncodingFieldNumber;
const int SLUConfig::kChannelsFieldNumber;
const int SLUConfig::kSampleRateHertzFieldNumber;
const int SLUConfig::kLanguageCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLUConfig::SLUConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SLUConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SLUConfig)
}
SLUConfig::SLUConfig(const SLUConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  ::memcpy(&encoding_, &from.encoding_,
    static_cast<size_t>(reinterpret_cast<char*>(&sample_rate_hertz_) -
    reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
  // @@protoc_insertion_point(copy_constructor:v1.SLUConfig)
}

void SLUConfig::SharedCtor() {
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
}

SLUConfig::~SLUConfig() {
  // @@protoc_insertion_point(destructor:v1.SLUConfig)
  SharedDtor();
}

void SLUConfig::SharedDtor() {
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLUConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLUConfig::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLUConfig& SLUConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SLUConfig.base);
  return *internal_default_instance();
}


void SLUConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SLUConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
  _internal_metadata_.Clear();
}

bool SLUConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SLUConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .v1.SLUConfig.Encoding encoding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::v1::SLUConfig_Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 channels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate_hertz = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.SLUConfig.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SLUConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SLUConfig)
  return false;
#undef DO_
}

void SLUConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SLUConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.SLUConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encoding(), output);
  }

  // int32 channels = 2;
  if (this->channels() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channels(), output);
  }

  // int32 sample_rate_hertz = 3;
  if (this->sample_rate_hertz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sample_rate_hertz(), output);
  }

  // string language_code = 4;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUConfig.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->language_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SLUConfig)
}

::google::protobuf::uint8* SLUConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SLUConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.SLUConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->encoding(), target);
  }

  // int32 channels = 2;
  if (this->channels() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channels(), target);
  }

  // int32 sample_rate_hertz = 3;
  if (this->sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sample_rate_hertz(), target);
  }

  // string language_code = 4;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUConfig.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->language_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SLUConfig)
  return target;
}

size_t SLUConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SLUConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string language_code = 4;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .v1.SLUConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  // int32 channels = 2;
  if (this->channels() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channels());
  }

  // int32 sample_rate_hertz = 3;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate_hertz());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLUConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SLUConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const SLUConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLUConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SLUConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SLUConfig)
    MergeFrom(*source);
  }
}

void SLUConfig::MergeFrom(const SLUConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SLUConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_code().size() > 0) {

    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
  if (from.channels() != 0) {
    set_channels(from.channels());
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
}

void SLUConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SLUConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLUConfig::CopyFrom(const SLUConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SLUConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLUConfig::IsInitialized() const {
  return true;
}

void SLUConfig::Swap(SLUConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLUConfig::InternalSwap(SLUConfig* other) {
  using std::swap;
  language_code_.Swap(&other->language_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(encoding_, other->encoding_);
  swap(channels_, other->channels_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLUConfig::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLUEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLUEvent::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLUEvent::SLUEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SLUEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SLUEvent)
}
SLUEvent::SLUEvent(const SLUEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  event_ = from.event_;
  // @@protoc_insertion_point(copy_constructor:v1.SLUEvent)
}

void SLUEvent::SharedCtor() {
  event_ = 0;
}

SLUEvent::~SLUEvent() {
  // @@protoc_insertion_point(destructor:v1.SLUEvent)
  SharedDtor();
}

void SLUEvent::SharedDtor() {
}

void SLUEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLUEvent::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLUEvent& SLUEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SLUEvent.base);
  return *internal_default_instance();
}


void SLUEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SLUEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_ = 0;
  _internal_metadata_.Clear();
}

bool SLUEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SLUEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .v1.SLUEvent.Event event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event(static_cast< ::v1::SLUEvent_Event >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SLUEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SLUEvent)
  return false;
#undef DO_
}

void SLUEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SLUEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.SLUEvent.Event event = 1;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SLUEvent)
}

::google::protobuf::uint8* SLUEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SLUEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.SLUEvent.Event event = 1;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SLUEvent)
  return target;
}

size_t SLUEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SLUEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .v1.SLUEvent.Event event = 1;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLUEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SLUEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SLUEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLUEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SLUEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SLUEvent)
    MergeFrom(*source);
  }
}

void SLUEvent::MergeFrom(const SLUEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SLUEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event() != 0) {
    set_event(from.event());
  }
}

void SLUEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SLUEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLUEvent::CopyFrom(const SLUEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SLUEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLUEvent::IsInitialized() const {
  return true;
}

void SLUEvent::Swap(SLUEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLUEvent::InternalSwap(SLUEvent* other) {
  using std::swap;
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLUEvent::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLUResponse::InitAsDefaultInstance() {
  ::v1::_SLUResponse_default_instance_.transcript_ = const_cast< ::v1::TranscriptEvent*>(
      ::v1::TranscriptEvent::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.entity_ = const_cast< ::v1::EntityEvent*>(
      ::v1::EntityEvent::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.intent_ = const_cast< ::v1::IntentEvent*>(
      ::v1::IntentEvent::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.segment_end_ = const_cast< ::v1::SegmentEndEvent*>(
      ::v1::SegmentEndEvent::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.tentative_transcript_ = const_cast< ::v1::TentativeTranscriptEvent*>(
      ::v1::TentativeTranscriptEvent::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.tentative_entities_ = const_cast< ::v1::TentativeEntitiesEvent*>(
      ::v1::TentativeEntitiesEvent::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.tentative_intent_ = const_cast< ::v1::IntentEvent*>(
      ::v1::IntentEvent::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.started_ = const_cast< ::v1::SLUStarted*>(
      ::v1::SLUStarted::internal_default_instance());
  ::v1::_SLUResponse_default_instance_.finished_ = const_cast< ::v1::SLUFinished*>(
      ::v1::SLUFinished::internal_default_instance());
}
void SLUResponse::set_allocated_transcript(::v1::TranscriptEvent* transcript) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (transcript) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transcript = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transcript, submessage_arena);
    }
    set_has_transcript();
    streaming_response_.transcript_ = transcript;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.transcript)
}
void SLUResponse::set_allocated_entity(::v1::EntityEvent* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    set_has_entity();
    streaming_response_.entity_ = entity;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.entity)
}
void SLUResponse::set_allocated_intent(::v1::IntentEvent* intent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (intent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intent, submessage_arena);
    }
    set_has_intent();
    streaming_response_.intent_ = intent;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.intent)
}
void SLUResponse::set_allocated_segment_end(::v1::SegmentEndEvent* segment_end) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (segment_end) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      segment_end = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, segment_end, submessage_arena);
    }
    set_has_segment_end();
    streaming_response_.segment_end_ = segment_end;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.segment_end)
}
void SLUResponse::set_allocated_tentative_transcript(::v1::TentativeTranscriptEvent* tentative_transcript) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (tentative_transcript) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tentative_transcript = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tentative_transcript, submessage_arena);
    }
    set_has_tentative_transcript();
    streaming_response_.tentative_transcript_ = tentative_transcript;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.tentative_transcript)
}
void SLUResponse::set_allocated_tentative_entities(::v1::TentativeEntitiesEvent* tentative_entities) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (tentative_entities) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tentative_entities = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tentative_entities, submessage_arena);
    }
    set_has_tentative_entities();
    streaming_response_.tentative_entities_ = tentative_entities;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.tentative_entities)
}
void SLUResponse::set_allocated_tentative_intent(::v1::IntentEvent* tentative_intent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (tentative_intent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tentative_intent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tentative_intent, submessage_arena);
    }
    set_has_tentative_intent();
    streaming_response_.tentative_intent_ = tentative_intent;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.tentative_intent)
}
void SLUResponse::set_allocated_started(::v1::SLUStarted* started) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (started) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      started = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, started, submessage_arena);
    }
    set_has_started();
    streaming_response_.started_ = started;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.started)
}
void SLUResponse::set_allocated_finished(::v1::SLUFinished* finished) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_streaming_response();
  if (finished) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      finished = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, finished, submessage_arena);
    }
    set_has_finished();
    streaming_response_.finished_ = finished;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.SLUResponse.finished)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLUResponse::kTranscriptFieldNumber;
const int SLUResponse::kEntityFieldNumber;
const int SLUResponse::kIntentFieldNumber;
const int SLUResponse::kSegmentEndFieldNumber;
const int SLUResponse::kTentativeTranscriptFieldNumber;
const int SLUResponse::kTentativeEntitiesFieldNumber;
const int SLUResponse::kTentativeIntentFieldNumber;
const int SLUResponse::kStartedFieldNumber;
const int SLUResponse::kFinishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLUResponse::SLUResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SLUResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SLUResponse)
}
SLUResponse::SLUResponse(const SLUResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_streaming_response();
  switch (from.streaming_response_case()) {
    case kTranscript: {
      mutable_transcript()->::v1::TranscriptEvent::MergeFrom(from.transcript());
      break;
    }
    case kEntity: {
      mutable_entity()->::v1::EntityEvent::MergeFrom(from.entity());
      break;
    }
    case kIntent: {
      mutable_intent()->::v1::IntentEvent::MergeFrom(from.intent());
      break;
    }
    case kSegmentEnd: {
      mutable_segment_end()->::v1::SegmentEndEvent::MergeFrom(from.segment_end());
      break;
    }
    case kTentativeTranscript: {
      mutable_tentative_transcript()->::v1::TentativeTranscriptEvent::MergeFrom(from.tentative_transcript());
      break;
    }
    case kTentativeEntities: {
      mutable_tentative_entities()->::v1::TentativeEntitiesEvent::MergeFrom(from.tentative_entities());
      break;
    }
    case kTentativeIntent: {
      mutable_tentative_intent()->::v1::IntentEvent::MergeFrom(from.tentative_intent());
      break;
    }
    case kStarted: {
      mutable_started()->::v1::SLUStarted::MergeFrom(from.started());
      break;
    }
    case kFinished: {
      mutable_finished()->::v1::SLUFinished::MergeFrom(from.finished());
      break;
    }
    case STREAMING_RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:v1.SLUResponse)
}

void SLUResponse::SharedCtor() {
  clear_has_streaming_response();
}

SLUResponse::~SLUResponse() {
  // @@protoc_insertion_point(destructor:v1.SLUResponse)
  SharedDtor();
}

void SLUResponse::SharedDtor() {
  if (has_streaming_response()) {
    clear_streaming_response();
  }
}

void SLUResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLUResponse::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLUResponse& SLUResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SLUResponse.base);
  return *internal_default_instance();
}


void SLUResponse::clear_streaming_response() {
// @@protoc_insertion_point(one_of_clear_start:v1.SLUResponse)
  switch (streaming_response_case()) {
    case kTranscript: {
      delete streaming_response_.transcript_;
      break;
    }
    case kEntity: {
      delete streaming_response_.entity_;
      break;
    }
    case kIntent: {
      delete streaming_response_.intent_;
      break;
    }
    case kSegmentEnd: {
      delete streaming_response_.segment_end_;
      break;
    }
    case kTentativeTranscript: {
      delete streaming_response_.tentative_transcript_;
      break;
    }
    case kTentativeEntities: {
      delete streaming_response_.tentative_entities_;
      break;
    }
    case kTentativeIntent: {
      delete streaming_response_.tentative_intent_;
      break;
    }
    case kStarted: {
      delete streaming_response_.started_;
      break;
    }
    case kFinished: {
      delete streaming_response_.finished_;
      break;
    }
    case STREAMING_RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STREAMING_RESPONSE_NOT_SET;
}


void SLUResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SLUResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_streaming_response();
  _internal_metadata_.Clear();
}

bool SLUResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SLUResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .v1.TranscriptEvent transcript = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transcript()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.EntityEvent entity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.IntentEvent intent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.SegmentEndEvent segment_end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_segment_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.TentativeTranscriptEvent tentative_transcript = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tentative_transcript()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.TentativeEntitiesEvent tentative_entities = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tentative_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.IntentEvent tentative_intent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tentative_intent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.SLUStarted started = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_started()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.SLUFinished finished = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_finished()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SLUResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SLUResponse)
  return false;
#undef DO_
}

void SLUResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SLUResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.TranscriptEvent transcript = 1;
  if (has_transcript()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_transcript(), output);
  }

  // .v1.EntityEvent entity = 2;
  if (has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_entity(), output);
  }

  // .v1.IntentEvent intent = 3;
  if (has_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_intent(), output);
  }

  // .v1.SegmentEndEvent segment_end = 4;
  if (has_segment_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_segment_end(), output);
  }

  // .v1.TentativeTranscriptEvent tentative_transcript = 5;
  if (has_tentative_transcript()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_tentative_transcript(), output);
  }

  // .v1.TentativeEntitiesEvent tentative_entities = 6;
  if (has_tentative_entities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_tentative_entities(), output);
  }

  // .v1.IntentEvent tentative_intent = 7;
  if (has_tentative_intent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_tentative_intent(), output);
  }

  // .v1.SLUStarted started = 8;
  if (has_started()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_started(), output);
  }

  // .v1.SLUFinished finished = 9;
  if (has_finished()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_finished(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SLUResponse)
}

::google::protobuf::uint8* SLUResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SLUResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .v1.TranscriptEvent transcript = 1;
  if (has_transcript()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_transcript(), deterministic, target);
  }

  // .v1.EntityEvent entity = 2;
  if (has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_entity(), deterministic, target);
  }

  // .v1.IntentEvent intent = 3;
  if (has_intent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_intent(), deterministic, target);
  }

  // .v1.SegmentEndEvent segment_end = 4;
  if (has_segment_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_segment_end(), deterministic, target);
  }

  // .v1.TentativeTranscriptEvent tentative_transcript = 5;
  if (has_tentative_transcript()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_tentative_transcript(), deterministic, target);
  }

  // .v1.TentativeEntitiesEvent tentative_entities = 6;
  if (has_tentative_entities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_tentative_entities(), deterministic, target);
  }

  // .v1.IntentEvent tentative_intent = 7;
  if (has_tentative_intent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_tentative_intent(), deterministic, target);
  }

  // .v1.SLUStarted started = 8;
  if (has_started()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_started(), deterministic, target);
  }

  // .v1.SLUFinished finished = 9;
  if (has_finished()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_finished(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SLUResponse)
  return target;
}

size_t SLUResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SLUResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (streaming_response_case()) {
    // .v1.TranscriptEvent transcript = 1;
    case kTranscript: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.transcript_);
      break;
    }
    // .v1.EntityEvent entity = 2;
    case kEntity: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.entity_);
      break;
    }
    // .v1.IntentEvent intent = 3;
    case kIntent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.intent_);
      break;
    }
    // .v1.SegmentEndEvent segment_end = 4;
    case kSegmentEnd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.segment_end_);
      break;
    }
    // .v1.TentativeTranscriptEvent tentative_transcript = 5;
    case kTentativeTranscript: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.tentative_transcript_);
      break;
    }
    // .v1.TentativeEntitiesEvent tentative_entities = 6;
    case kTentativeEntities: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.tentative_entities_);
      break;
    }
    // .v1.IntentEvent tentative_intent = 7;
    case kTentativeIntent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.tentative_intent_);
      break;
    }
    // .v1.SLUStarted started = 8;
    case kStarted: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.started_);
      break;
    }
    // .v1.SLUFinished finished = 9;
    case kFinished: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *streaming_response_.finished_);
      break;
    }
    case STREAMING_RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLUResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SLUResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SLUResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLUResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SLUResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SLUResponse)
    MergeFrom(*source);
  }
}

void SLUResponse::MergeFrom(const SLUResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SLUResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.streaming_response_case()) {
    case kTranscript: {
      mutable_transcript()->::v1::TranscriptEvent::MergeFrom(from.transcript());
      break;
    }
    case kEntity: {
      mutable_entity()->::v1::EntityEvent::MergeFrom(from.entity());
      break;
    }
    case kIntent: {
      mutable_intent()->::v1::IntentEvent::MergeFrom(from.intent());
      break;
    }
    case kSegmentEnd: {
      mutable_segment_end()->::v1::SegmentEndEvent::MergeFrom(from.segment_end());
      break;
    }
    case kTentativeTranscript: {
      mutable_tentative_transcript()->::v1::TentativeTranscriptEvent::MergeFrom(from.tentative_transcript());
      break;
    }
    case kTentativeEntities: {
      mutable_tentative_entities()->::v1::TentativeEntitiesEvent::MergeFrom(from.tentative_entities());
      break;
    }
    case kTentativeIntent: {
      mutable_tentative_intent()->::v1::IntentEvent::MergeFrom(from.tentative_intent());
      break;
    }
    case kStarted: {
      mutable_started()->::v1::SLUStarted::MergeFrom(from.started());
      break;
    }
    case kFinished: {
      mutable_finished()->::v1::SLUFinished::MergeFrom(from.finished());
      break;
    }
    case STREAMING_RESPONSE_NOT_SET: {
      break;
    }
  }
}

void SLUResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SLUResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLUResponse::CopyFrom(const SLUResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SLUResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLUResponse::IsInitialized() const {
  return true;
}

void SLUResponse::Swap(SLUResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLUResponse::InternalSwap(SLUResponse* other) {
  using std::swap;
  swap(streaming_response_, other->streaming_response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLUResponse::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TentativeTranscriptEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TentativeTranscriptEvent::kTentativeTranscriptFieldNumber;
const int TentativeTranscriptEvent::kTentativeWordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TentativeTranscriptEvent::TentativeTranscriptEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_TentativeTranscriptEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.TentativeTranscriptEvent)
}
TentativeTranscriptEvent::TentativeTranscriptEvent(const TentativeTranscriptEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tentative_words_(from.tentative_words_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tentative_transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tentative_transcript().size() > 0) {
    tentative_transcript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tentative_transcript_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.TentativeTranscriptEvent)
}

void TentativeTranscriptEvent::SharedCtor() {
  tentative_transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TentativeTranscriptEvent::~TentativeTranscriptEvent() {
  // @@protoc_insertion_point(destructor:v1.TentativeTranscriptEvent)
  SharedDtor();
}

void TentativeTranscriptEvent::SharedDtor() {
  tentative_transcript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TentativeTranscriptEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TentativeTranscriptEvent::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TentativeTranscriptEvent& TentativeTranscriptEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_TentativeTranscriptEvent.base);
  return *internal_default_instance();
}


void TentativeTranscriptEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.TentativeTranscriptEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tentative_words_.Clear();
  tentative_transcript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TentativeTranscriptEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.TentativeTranscriptEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tentative_transcript = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tentative_transcript()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tentative_transcript().data(), static_cast<int>(this->tentative_transcript().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.TentativeTranscriptEvent.tentative_transcript"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .v1.TranscriptEvent tentative_words = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tentative_words()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.TentativeTranscriptEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.TentativeTranscriptEvent)
  return false;
#undef DO_
}

void TentativeTranscriptEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.TentativeTranscriptEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tentative_transcript = 1;
  if (this->tentative_transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tentative_transcript().data(), static_cast<int>(this->tentative_transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.TentativeTranscriptEvent.tentative_transcript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tentative_transcript(), output);
  }

  // repeated .v1.TranscriptEvent tentative_words = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tentative_words_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->tentative_words(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.TentativeTranscriptEvent)
}

::google::protobuf::uint8* TentativeTranscriptEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.TentativeTranscriptEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tentative_transcript = 1;
  if (this->tentative_transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tentative_transcript().data(), static_cast<int>(this->tentative_transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.TentativeTranscriptEvent.tentative_transcript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tentative_transcript(), target);
  }

  // repeated .v1.TranscriptEvent tentative_words = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tentative_words_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->tentative_words(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.TentativeTranscriptEvent)
  return target;
}

size_t TentativeTranscriptEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.TentativeTranscriptEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .v1.TranscriptEvent tentative_words = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tentative_words_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tentative_words(static_cast<int>(i)));
    }
  }

  // string tentative_transcript = 1;
  if (this->tentative_transcript().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tentative_transcript());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TentativeTranscriptEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.TentativeTranscriptEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const TentativeTranscriptEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TentativeTranscriptEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.TentativeTranscriptEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.TentativeTranscriptEvent)
    MergeFrom(*source);
  }
}

void TentativeTranscriptEvent::MergeFrom(const TentativeTranscriptEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.TentativeTranscriptEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tentative_words_.MergeFrom(from.tentative_words_);
  if (from.tentative_transcript().size() > 0) {

    tentative_transcript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tentative_transcript_);
  }
}

void TentativeTranscriptEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.TentativeTranscriptEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TentativeTranscriptEvent::CopyFrom(const TentativeTranscriptEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.TentativeTranscriptEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TentativeTranscriptEvent::IsInitialized() const {
  return true;
}

void TentativeTranscriptEvent::Swap(TentativeTranscriptEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TentativeTranscriptEvent::InternalSwap(TentativeTranscriptEvent* other) {
  using std::swap;
  CastToBase(&tentative_words_)->InternalSwap(CastToBase(&other->tentative_words_));
  tentative_transcript_.Swap(&other->tentative_transcript_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TentativeTranscriptEvent::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TranscriptEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TranscriptEvent::kAudioContextFieldNumber;
const int TranscriptEvent::kSegmentIdFieldNumber;
const int TranscriptEvent::kWordFieldNumber;
const int TranscriptEvent::kIndexFieldNumber;
const int TranscriptEvent::kStartTimeFieldNumber;
const int TranscriptEvent::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TranscriptEvent::TranscriptEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_TranscriptEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.TranscriptEvent)
}
TranscriptEvent::TranscriptEvent(const TranscriptEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_context().size() > 0) {
    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.word().size() > 0) {
    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  ::memcpy(&segment_id_, &from.segment_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&segment_id_)) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:v1.TranscriptEvent)
}

void TranscriptEvent::SharedCtor() {
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&segment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&segment_id_)) + sizeof(end_time_));
}

TranscriptEvent::~TranscriptEvent() {
  // @@protoc_insertion_point(destructor:v1.TranscriptEvent)
  SharedDtor();
}

void TranscriptEvent::SharedDtor() {
  audio_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TranscriptEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TranscriptEvent::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TranscriptEvent& TranscriptEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_TranscriptEvent.base);
  return *internal_default_instance();
}


void TranscriptEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.TranscriptEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&segment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&segment_id_)) + sizeof(end_time_));
  _internal_metadata_.Clear();
}

bool TranscriptEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.TranscriptEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string audio_context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_context().data(), static_cast<int>(this->audio_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.TranscriptEvent.audio_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 segment_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string word = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_word()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->word().data(), static_cast<int>(this->word().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.TranscriptEvent.word"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 start_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.TranscriptEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.TranscriptEvent)
  return false;
#undef DO_
}

void TranscriptEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.TranscriptEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.TranscriptEvent.audio_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->audio_context(), output);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->segment_id(), output);
  }

  // string word = 3;
  if (this->word().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.TranscriptEvent.word");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->word(), output);
  }

  // int32 index = 4;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->index(), output);
  }

  // int32 start_time = 5;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->start_time(), output);
  }

  // int32 end_time = 6;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.TranscriptEvent)
}

::google::protobuf::uint8* TranscriptEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.TranscriptEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.TranscriptEvent.audio_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->audio_context(), target);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->segment_id(), target);
  }

  // string word = 3;
  if (this->word().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->word().data(), static_cast<int>(this->word().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.TranscriptEvent.word");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->word(), target);
  }

  // int32 index = 4;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->index(), target);
  }

  // int32 start_time = 5;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->start_time(), target);
  }

  // int32 end_time = 6;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.TranscriptEvent)
  return target;
}

size_t TranscriptEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.TranscriptEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_context());
  }

  // string word = 3;
  if (this->word().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->word());
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segment_id());
  }

  // int32 index = 4;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // int32 start_time = 5;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start_time());
  }

  // int32 end_time = 6;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TranscriptEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.TranscriptEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const TranscriptEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TranscriptEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.TranscriptEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.TranscriptEvent)
    MergeFrom(*source);
  }
}

void TranscriptEvent::MergeFrom(const TranscriptEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.TranscriptEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_context().size() > 0) {

    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  if (from.word().size() > 0) {

    word_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.word_);
  }
  if (from.segment_id() != 0) {
    set_segment_id(from.segment_id());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
}

void TranscriptEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.TranscriptEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TranscriptEvent::CopyFrom(const TranscriptEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.TranscriptEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TranscriptEvent::IsInitialized() const {
  return true;
}

void TranscriptEvent::Swap(TranscriptEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TranscriptEvent::InternalSwap(TranscriptEvent* other) {
  using std::swap;
  audio_context_.Swap(&other->audio_context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  word_.Swap(&other->word_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(segment_id_, other->segment_id_);
  swap(index_, other->index_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TranscriptEvent::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TentativeEntitiesEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TentativeEntitiesEvent::kTentativeEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TentativeEntitiesEvent::TentativeEntitiesEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_TentativeEntitiesEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.TentativeEntitiesEvent)
}
TentativeEntitiesEvent::TentativeEntitiesEvent(const TentativeEntitiesEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tentative_entities_(from.tentative_entities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:v1.TentativeEntitiesEvent)
}

void TentativeEntitiesEvent::SharedCtor() {
}

TentativeEntitiesEvent::~TentativeEntitiesEvent() {
  // @@protoc_insertion_point(destructor:v1.TentativeEntitiesEvent)
  SharedDtor();
}

void TentativeEntitiesEvent::SharedDtor() {
}

void TentativeEntitiesEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TentativeEntitiesEvent::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TentativeEntitiesEvent& TentativeEntitiesEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_TentativeEntitiesEvent.base);
  return *internal_default_instance();
}


void TentativeEntitiesEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.TentativeEntitiesEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tentative_entities_.Clear();
  _internal_metadata_.Clear();
}

bool TentativeEntitiesEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.TentativeEntitiesEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .v1.EntityEvent tentative_entities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tentative_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.TentativeEntitiesEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.TentativeEntitiesEvent)
  return false;
#undef DO_
}

void TentativeEntitiesEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.TentativeEntitiesEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.EntityEvent tentative_entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tentative_entities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tentative_entities(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.TentativeEntitiesEvent)
}

::google::protobuf::uint8* TentativeEntitiesEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.TentativeEntitiesEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.EntityEvent tentative_entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tentative_entities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tentative_entities(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.TentativeEntitiesEvent)
  return target;
}

size_t TentativeEntitiesEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.TentativeEntitiesEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .v1.EntityEvent tentative_entities = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tentative_entities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tentative_entities(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TentativeEntitiesEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.TentativeEntitiesEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const TentativeEntitiesEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TentativeEntitiesEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.TentativeEntitiesEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.TentativeEntitiesEvent)
    MergeFrom(*source);
  }
}

void TentativeEntitiesEvent::MergeFrom(const TentativeEntitiesEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.TentativeEntitiesEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tentative_entities_.MergeFrom(from.tentative_entities_);
}

void TentativeEntitiesEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.TentativeEntitiesEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TentativeEntitiesEvent::CopyFrom(const TentativeEntitiesEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.TentativeEntitiesEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TentativeEntitiesEvent::IsInitialized() const {
  return true;
}

void TentativeEntitiesEvent::Swap(TentativeEntitiesEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TentativeEntitiesEvent::InternalSwap(TentativeEntitiesEvent* other) {
  using std::swap;
  CastToBase(&tentative_entities_)->InternalSwap(CastToBase(&other->tentative_entities_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TentativeEntitiesEvent::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityEvent::kAudioContextFieldNumber;
const int EntityEvent::kSegmentIdFieldNumber;
const int EntityEvent::kEntityFieldNumber;
const int EntityEvent::kValueFieldNumber;
const int EntityEvent::kStartPositionFieldNumber;
const int EntityEvent::kEndPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityEvent::EntityEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_EntityEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.EntityEvent)
}
EntityEvent::EntityEvent(const EntityEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_context().size() > 0) {
    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity().size() > 0) {
    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&segment_id_, &from.segment_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_position_) -
    reinterpret_cast<char*>(&segment_id_)) + sizeof(end_position_));
  // @@protoc_insertion_point(copy_constructor:v1.EntityEvent)
}

void EntityEvent::SharedCtor() {
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&segment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_position_) -
      reinterpret_cast<char*>(&segment_id_)) + sizeof(end_position_));
}

EntityEvent::~EntityEvent() {
  // @@protoc_insertion_point(destructor:v1.EntityEvent)
  SharedDtor();
}

void EntityEvent::SharedDtor() {
  audio_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EntityEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EntityEvent::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityEvent& EntityEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_EntityEvent.base);
  return *internal_default_instance();
}


void EntityEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&segment_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_position_) -
      reinterpret_cast<char*>(&segment_id_)) + sizeof(end_position_));
  _internal_metadata_.Clear();
}

bool EntityEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.EntityEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string audio_context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_context().data(), static_cast<int>(this->audio_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.EntityEvent.audio_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 segment_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->entity().data(), static_cast<int>(this->entity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.EntityEvent.entity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.EntityEvent.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 start_position = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end_position = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.EntityEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.EntityEvent)
  return false;
#undef DO_
}

void EntityEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.EntityEvent.audio_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->audio_context(), output);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->segment_id(), output);
  }

  // string entity = 3;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.EntityEvent.entity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->entity(), output);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.EntityEvent.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  // int32 start_position = 5;
  if (this->start_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->start_position(), output);
  }

  // int32 end_position = 6;
  if (this->end_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->end_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.EntityEvent)
}

::google::protobuf::uint8* EntityEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.EntityEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.EntityEvent.audio_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->audio_context(), target);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->segment_id(), target);
  }

  // string entity = 3;
  if (this->entity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->entity().data(), static_cast<int>(this->entity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.EntityEvent.entity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->entity(), target);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.EntityEvent.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value(), target);
  }

  // int32 start_position = 5;
  if (this->start_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->start_position(), target);
  }

  // int32 end_position = 6;
  if (this->end_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->end_position(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.EntityEvent)
  return target;
}

size_t EntityEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.EntityEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_context());
  }

  // string entity = 3;
  if (this->entity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->entity());
  }

  // string value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segment_id());
  }

  // int32 start_position = 5;
  if (this->start_position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start_position());
  }

  // int32 end_position = 6;
  if (this->end_position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end_position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.EntityEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.EntityEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.EntityEvent)
    MergeFrom(*source);
  }
}

void EntityEvent::MergeFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.EntityEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_context().size() > 0) {

    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  if (from.entity().size() > 0) {

    entity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.segment_id() != 0) {
    set_segment_id(from.segment_id());
  }
  if (from.start_position() != 0) {
    set_start_position(from.start_position());
  }
  if (from.end_position() != 0) {
    set_end_position(from.end_position());
  }
}

void EntityEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.EntityEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityEvent::CopyFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.EntityEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityEvent::IsInitialized() const {
  return true;
}

void EntityEvent::Swap(EntityEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityEvent::InternalSwap(EntityEvent* other) {
  using std::swap;
  audio_context_.Swap(&other->audio_context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  entity_.Swap(&other->entity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(segment_id_, other->segment_id_);
  swap(start_position_, other->start_position_);
  swap(end_position_, other->end_position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EntityEvent::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IntentEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntentEvent::kAudioContextFieldNumber;
const int IntentEvent::kSegmentIdFieldNumber;
const int IntentEvent::kIntentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntentEvent::IntentEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_IntentEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.IntentEvent)
}
IntentEvent::IntentEvent(const IntentEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_context().size() > 0) {
    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  intent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.intent().size() > 0) {
    intent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intent_);
  }
  segment_id_ = from.segment_id_;
  // @@protoc_insertion_point(copy_constructor:v1.IntentEvent)
}

void IntentEvent::SharedCtor() {
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segment_id_ = 0;
}

IntentEvent::~IntentEvent() {
  // @@protoc_insertion_point(destructor:v1.IntentEvent)
  SharedDtor();
}

void IntentEvent::SharedDtor() {
  audio_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IntentEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IntentEvent::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntentEvent& IntentEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_IntentEvent.base);
  return *internal_default_instance();
}


void IntentEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.IntentEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segment_id_ = 0;
  _internal_metadata_.Clear();
}

bool IntentEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.IntentEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string audio_context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_context().data(), static_cast<int>(this->audio_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.IntentEvent.audio_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 segment_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string intent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_intent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->intent().data(), static_cast<int>(this->intent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.IntentEvent.intent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.IntentEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.IntentEvent)
  return false;
#undef DO_
}

void IntentEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.IntentEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.IntentEvent.audio_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->audio_context(), output);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->segment_id(), output);
  }

  // string intent = 3;
  if (this->intent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intent().data(), static_cast<int>(this->intent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.IntentEvent.intent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->intent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.IntentEvent)
}

::google::protobuf::uint8* IntentEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.IntentEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.IntentEvent.audio_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->audio_context(), target);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->segment_id(), target);
  }

  // string intent = 3;
  if (this->intent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intent().data(), static_cast<int>(this->intent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.IntentEvent.intent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->intent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.IntentEvent)
  return target;
}

size_t IntentEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.IntentEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_context());
  }

  // string intent = 3;
  if (this->intent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->intent());
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segment_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntentEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.IntentEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const IntentEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntentEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.IntentEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.IntentEvent)
    MergeFrom(*source);
  }
}

void IntentEvent::MergeFrom(const IntentEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.IntentEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_context().size() > 0) {

    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  if (from.intent().size() > 0) {

    intent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intent_);
  }
  if (from.segment_id() != 0) {
    set_segment_id(from.segment_id());
  }
}

void IntentEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.IntentEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntentEvent::CopyFrom(const IntentEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.IntentEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntentEvent::IsInitialized() const {
  return true;
}

void IntentEvent::Swap(IntentEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntentEvent::InternalSwap(IntentEvent* other) {
  using std::swap;
  audio_context_.Swap(&other->audio_context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  intent_.Swap(&other->intent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(segment_id_, other->segment_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IntentEvent::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SegmentEndEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SegmentEndEvent::kAudioContextFieldNumber;
const int SegmentEndEvent::kSegmentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SegmentEndEvent::SegmentEndEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SegmentEndEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SegmentEndEvent)
}
SegmentEndEvent::SegmentEndEvent(const SegmentEndEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_context().size() > 0) {
    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  segment_id_ = from.segment_id_;
  // @@protoc_insertion_point(copy_constructor:v1.SegmentEndEvent)
}

void SegmentEndEvent::SharedCtor() {
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segment_id_ = 0;
}

SegmentEndEvent::~SegmentEndEvent() {
  // @@protoc_insertion_point(destructor:v1.SegmentEndEvent)
  SharedDtor();
}

void SegmentEndEvent::SharedDtor() {
  audio_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SegmentEndEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SegmentEndEvent::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SegmentEndEvent& SegmentEndEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SegmentEndEvent.base);
  return *internal_default_instance();
}


void SegmentEndEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SegmentEndEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segment_id_ = 0;
  _internal_metadata_.Clear();
}

bool SegmentEndEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SegmentEndEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string audio_context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_context().data(), static_cast<int>(this->audio_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.SegmentEndEvent.audio_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 segment_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segment_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SegmentEndEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SegmentEndEvent)
  return false;
#undef DO_
}

void SegmentEndEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SegmentEndEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SegmentEndEvent.audio_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->audio_context(), output);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->segment_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SegmentEndEvent)
}

::google::protobuf::uint8* SegmentEndEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SegmentEndEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SegmentEndEvent.audio_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->audio_context(), target);
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->segment_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SegmentEndEvent)
  return target;
}

size_t SegmentEndEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SegmentEndEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_context());
  }

  // int32 segment_id = 2;
  if (this->segment_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segment_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SegmentEndEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SegmentEndEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const SegmentEndEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SegmentEndEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SegmentEndEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SegmentEndEvent)
    MergeFrom(*source);
  }
}

void SegmentEndEvent::MergeFrom(const SegmentEndEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SegmentEndEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_context().size() > 0) {

    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  if (from.segment_id() != 0) {
    set_segment_id(from.segment_id());
  }
}

void SegmentEndEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SegmentEndEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SegmentEndEvent::CopyFrom(const SegmentEndEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SegmentEndEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SegmentEndEvent::IsInitialized() const {
  return true;
}

void SegmentEndEvent::Swap(SegmentEndEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SegmentEndEvent::InternalSwap(SegmentEndEvent* other) {
  using std::swap;
  audio_context_.Swap(&other->audio_context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(segment_id_, other->segment_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SegmentEndEvent::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLUStarted::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLUStarted::kAudioContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLUStarted::SLUStarted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SLUStarted.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SLUStarted)
}
SLUStarted::SLUStarted(const SLUStarted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_context().size() > 0) {
    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.SLUStarted)
}

void SLUStarted::SharedCtor() {
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SLUStarted::~SLUStarted() {
  // @@protoc_insertion_point(destructor:v1.SLUStarted)
  SharedDtor();
}

void SLUStarted::SharedDtor() {
  audio_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLUStarted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLUStarted::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLUStarted& SLUStarted::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SLUStarted.base);
  return *internal_default_instance();
}


void SLUStarted::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SLUStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SLUStarted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SLUStarted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string audio_context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_context().data(), static_cast<int>(this->audio_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.SLUStarted.audio_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SLUStarted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SLUStarted)
  return false;
#undef DO_
}

void SLUStarted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SLUStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUStarted.audio_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->audio_context(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SLUStarted)
}

::google::protobuf::uint8* SLUStarted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SLUStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUStarted.audio_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->audio_context(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SLUStarted)
  return target;
}

size_t SLUStarted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SLUStarted)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_context());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLUStarted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SLUStarted)
  GOOGLE_DCHECK_NE(&from, this);
  const SLUStarted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLUStarted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SLUStarted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SLUStarted)
    MergeFrom(*source);
  }
}

void SLUStarted::MergeFrom(const SLUStarted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SLUStarted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_context().size() > 0) {

    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
}

void SLUStarted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SLUStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLUStarted::CopyFrom(const SLUStarted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SLUStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLUStarted::IsInitialized() const {
  return true;
}

void SLUStarted::Swap(SLUStarted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLUStarted::InternalSwap(SLUStarted* other) {
  using std::swap;
  audio_context_.Swap(&other->audio_context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLUStarted::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLUFinished::InitAsDefaultInstance() {
  ::v1::_SLUFinished_default_instance_._instance.get_mutable()->error_ = const_cast< ::v1::SLUError*>(
      ::v1::SLUError::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLUFinished::kAudioContextFieldNumber;
const int SLUFinished::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLUFinished::SLUFinished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SLUFinished.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SLUFinished)
}
SLUFinished::SLUFinished(const SLUFinished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_context().size() > 0) {
    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  if (from.has_error()) {
    error_ = new ::v1::SLUError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:v1.SLUFinished)
}

void SLUFinished::SharedCtor() {
  audio_context_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

SLUFinished::~SLUFinished() {
  // @@protoc_insertion_point(destructor:v1.SLUFinished)
  SharedDtor();
}

void SLUFinished::SharedDtor() {
  audio_context_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void SLUFinished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLUFinished::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLUFinished& SLUFinished::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SLUFinished.base);
  return *internal_default_instance();
}


void SLUFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SLUFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool SLUFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SLUFinished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string audio_context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_context()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_context().data(), static_cast<int>(this->audio_context().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.SLUFinished.audio_context"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .v1.SLUError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SLUFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SLUFinished)
  return false;
#undef DO_
}

void SLUFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SLUFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUFinished.audio_context");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->audio_context(), output);
  }

  // .v1.SLUError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SLUFinished)
}

::google::protobuf::uint8* SLUFinished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SLUFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_context().data(), static_cast<int>(this->audio_context().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUFinished.audio_context");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->audio_context(), target);
  }

  // .v1.SLUError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SLUFinished)
  return target;
}

size_t SLUFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SLUFinished)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string audio_context = 1;
  if (this->audio_context().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_context());
  }

  // .v1.SLUError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLUFinished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SLUFinished)
  GOOGLE_DCHECK_NE(&from, this);
  const SLUFinished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLUFinished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SLUFinished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SLUFinished)
    MergeFrom(*source);
  }
}

void SLUFinished::MergeFrom(const SLUFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SLUFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_context().size() > 0) {

    audio_context_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_context_);
  }
  if (from.has_error()) {
    mutable_error()->::v1::SLUError::MergeFrom(from.error());
  }
}

void SLUFinished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SLUFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLUFinished::CopyFrom(const SLUFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SLUFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLUFinished::IsInitialized() const {
  return true;
}

void SLUFinished::Swap(SLUFinished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLUFinished::InternalSwap(SLUFinished* other) {
  using std::swap;
  audio_context_.Swap(&other->audio_context_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLUFinished::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLUError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLUError::kCodeFieldNumber;
const int SLUError::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLUError::SLUError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_SLUError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.SLUError)
}
SLUError::SLUError(const SLUError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.SLUError)
}

void SLUError::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SLUError::~SLUError() {
  // @@protoc_insertion_point(destructor:v1.SLUError)
  SharedDtor();
}

void SLUError::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLUError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SLUError::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLUError& SLUError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_SLUError.base);
  return *internal_default_instance();
}


void SLUError::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.SLUError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SLUError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.SLUError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.SLUError.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.SLUError.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.SLUError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.SLUError)
  return false;
#undef DO_
}

void SLUError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.SLUError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUError.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUError.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.SLUError)
}

::google::protobuf::uint8* SLUError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.SLUError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUError.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.SLUError.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.SLUError)
  return target;
}

size_t SLUError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.SLUError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLUError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.SLUError)
  GOOGLE_DCHECK_NE(&from, this);
  const SLUError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLUError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.SLUError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.SLUError)
    MergeFrom(*source);
  }
}

void SLUError::MergeFrom(const SLUError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.SLUError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void SLUError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.SLUError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLUError::CopyFrom(const SLUError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.SLUError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLUError::IsInitialized() const {
  return true;
}

void SLUError::Swap(SLUError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLUError::InternalSwap(SLUError* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SLUError::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WLURequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WLURequest::kLanguageCodeFieldNumber;
const int WLURequest::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WLURequest::WLURequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_WLURequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.WLURequest)
}
WLURequest::WLURequest(const WLURequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.WLURequest)
}

void WLURequest::SharedCtor() {
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WLURequest::~WLURequest() {
  // @@protoc_insertion_point(destructor:v1.WLURequest)
  SharedDtor();
}

void WLURequest::SharedDtor() {
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WLURequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WLURequest::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WLURequest& WLURequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_WLURequest.base);
  return *internal_default_instance();
}


void WLURequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.WLURequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WLURequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.WLURequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string language_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.WLURequest.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.WLURequest.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.WLURequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.WLURequest)
  return false;
#undef DO_
}

void WLURequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.WLURequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.WLURequest.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language_code(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.WLURequest.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.WLURequest)
}

::google::protobuf::uint8* WLURequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.WLURequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.WLURequest.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language_code(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.WLURequest.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.WLURequest)
  return target;
}

size_t WLURequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.WLURequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string language_code = 1;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WLURequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.WLURequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WLURequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WLURequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.WLURequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.WLURequest)
    MergeFrom(*source);
  }
}

void WLURequest::MergeFrom(const WLURequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.WLURequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language_code().size() > 0) {

    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void WLURequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.WLURequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WLURequest::CopyFrom(const WLURequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.WLURequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WLURequest::IsInitialized() const {
  return true;
}

void WLURequest::Swap(WLURequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WLURequest::InternalSwap(WLURequest* other) {
  using std::swap;
  language_code_.Swap(&other->language_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WLURequest::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WLUResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WLUResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WLUResponse::WLUResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_WLUResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.WLUResponse)
}
WLUResponse::WLUResponse(const WLUResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:v1.WLUResponse)
}

void WLUResponse::SharedCtor() {
}

WLUResponse::~WLUResponse() {
  // @@protoc_insertion_point(destructor:v1.WLUResponse)
  SharedDtor();
}

void WLUResponse::SharedDtor() {
}

void WLUResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WLUResponse::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WLUResponse& WLUResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_WLUResponse.base);
  return *internal_default_instance();
}


void WLUResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.WLUResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool WLUResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.WLUResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .v1.SLUResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.WLUResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.WLUResponse)
  return false;
#undef DO_
}

void WLUResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.WLUResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.SLUResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.WLUResponse)
}

::google::protobuf::uint8* WLUResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.WLUResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.SLUResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.WLUResponse)
  return target;
}

size_t WLUResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.WLUResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .v1.SLUResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WLUResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.WLUResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WLUResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WLUResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.WLUResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.WLUResponse)
    MergeFrom(*source);
  }
}

void WLUResponse::MergeFrom(const WLUResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.WLUResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void WLUResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.WLUResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WLUResponse::CopyFrom(const WLUResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.WLUResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WLUResponse::IsInitialized() const {
  return true;
}

void WLUResponse::Swap(WLUResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WLUResponse::InternalSwap(WLUResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WLUResponse::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kDeviceIdFieldNumber;
const int LoginRequest::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_LoginRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_id().size() > 0) {
    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_id().size() > 0) {
    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.LoginRequest)
}

void LoginRequest::SharedCtor() {
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:v1.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_LoginRequest.base);
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.LoginRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), static_cast<int>(this->device_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.LoginRequest.device_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_id().data(), static_cast<int>(this->app_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.LoginRequest.app_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_id = 1;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.LoginRequest.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_id(), output);
  }

  // string app_id = 2;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), static_cast<int>(this->app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.LoginRequest.app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_id = 1;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.LoginRequest.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_id(), target);
  }

  // string app_id = 2;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), static_cast<int>(this->app_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.LoginRequest.app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string device_id = 1;
  if (this->device_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  // string app_id = 2;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  if (from.app_id().size() > 0) {

    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  device_id_.Swap(&other->device_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  app_id_.Swap(&other->app_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_speechly_2eproto::scc_info_LoginResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:v1.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:v1.LoginResponse)
}

void LoginResponse::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:v1.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  ::protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginResponse& LoginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_speechly_2eproto::scc_info_LoginResponse.base);
  return *internal_default_instance();
}


void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:v1.LoginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "v1.LoginResponse.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:v1.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:v1.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:v1.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.LoginResponse.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:v1.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:v1.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "v1.LoginResponse.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.LoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:v1.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:v1.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:v1.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:v1.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_speechly_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_speechly_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SLURequest* Arena::CreateMaybeMessage< ::v1::SLURequest >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SLURequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SLUConfig* Arena::CreateMaybeMessage< ::v1::SLUConfig >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SLUConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SLUEvent* Arena::CreateMaybeMessage< ::v1::SLUEvent >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SLUEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SLUResponse* Arena::CreateMaybeMessage< ::v1::SLUResponse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SLUResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::TentativeTranscriptEvent* Arena::CreateMaybeMessage< ::v1::TentativeTranscriptEvent >(Arena* arena) {
  return Arena::CreateInternal< ::v1::TentativeTranscriptEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::TranscriptEvent* Arena::CreateMaybeMessage< ::v1::TranscriptEvent >(Arena* arena) {
  return Arena::CreateInternal< ::v1::TranscriptEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::TentativeEntitiesEvent* Arena::CreateMaybeMessage< ::v1::TentativeEntitiesEvent >(Arena* arena) {
  return Arena::CreateInternal< ::v1::TentativeEntitiesEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::EntityEvent* Arena::CreateMaybeMessage< ::v1::EntityEvent >(Arena* arena) {
  return Arena::CreateInternal< ::v1::EntityEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::IntentEvent* Arena::CreateMaybeMessage< ::v1::IntentEvent >(Arena* arena) {
  return Arena::CreateInternal< ::v1::IntentEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SegmentEndEvent* Arena::CreateMaybeMessage< ::v1::SegmentEndEvent >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SegmentEndEvent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SLUStarted* Arena::CreateMaybeMessage< ::v1::SLUStarted >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SLUStarted >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SLUFinished* Arena::CreateMaybeMessage< ::v1::SLUFinished >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SLUFinished >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::SLUError* Arena::CreateMaybeMessage< ::v1::SLUError >(Arena* arena) {
  return Arena::CreateInternal< ::v1::SLUError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::WLURequest* Arena::CreateMaybeMessage< ::v1::WLURequest >(Arena* arena) {
  return Arena::CreateInternal< ::v1::WLURequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::WLUResponse* Arena::CreateMaybeMessage< ::v1::WLUResponse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::WLUResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::LoginRequest* Arena::CreateMaybeMessage< ::v1::LoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::v1::LoginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::v1::LoginResponse* Arena::CreateMaybeMessage< ::v1::LoginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::v1::LoginResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "IncludeEnd.h"